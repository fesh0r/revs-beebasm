from commands import *
from trace6502 import *
import acorn


load(0x7900, "4-reference-binaries/slices/1200-12ff.bin")
load(0x0b00, "4-reference-binaries/slices/1300-14ff.bin")
load(0x7000, "4-reference-binaries/slices/1500-15da.bin")
load(0x8000, "4-reference-binaries/slices/15db-16db.bin")
load(0x16dc, "4-reference-binaries/slices/16dc-5a7f.bin")
load(0x0d00, "4-reference-binaries/slices/5a80-645b.bin")
#load(0x645c, "4-reference-binaries/slices/645c-64cf.bin") # Just zeroes
load(0x5fd0, "4-reference-binaries/slices/64d0-6bff.bin")
load(0x6c00, "4-reference-binaries/slices/6c00-6fff.bin")

set_output_filename("3-assembled-output/null.bin")

acorn.bbc()
config.set_lower_case(False)

# Remove all extras
config.set_label_references(False)
config.set_hex_dump(False)
config.set_bytes_as_ascii(False)
config.show_autogenerated_labels = False
config.show_all_labels = False

################################################################################
# ZERO PAGE
################################################################################

label(0x0070, "P")
label(0x0071, "Q")
label(0x0072, "R")
label(0x0073, "S")

label(0x7800, "trackChecksum")

################################################################################
# ENTRY CODE
################################################################################

entry(0x7900, "Entry")
comment(0x7900, "Move block from &1200-&12FF to &7900-&79FF and jump to &790E")
label(0x7902, "entr1")

################################################################################
# SWAP CODE
################################################################################

entry(0x790e, "SwapCode") # this causes an assertion error on &1500
comment(0x790e, "Disable the ESCAPE key and clear memory if the BREAK key is pressed")
comment(0x7917, "*TAPE")
comment(0x791e, "Set (Q P) = &5300 = trackData, destintion address for track data")
comment(0x7926, "Set (S R) = &70DB, source address of track data")
label(0x7930, "swap1")

comment(0x792e, "Swap memory between &70DB-&7724 to &5300-&5949 and decrement checksum bytes in &7800-&7803")


comment(0x7930, "Swap Y-th byte of (Q P) and (S R)")
comment(0x793a, "Decrement the relevant checksum byte at &7800-&7803")
comment(0x7940, "Increment loop counter")
comment(0x7941, "Increment high bytes to move on to next page")
label(0x7947, "swap2")
comment(0x7947, "If we have not yet reached &7725, jump back to swap1 to keep going")
comment(0x7951, "Now check that all three checksum bytes in &7800-&7803 are zero")
label(0x7953, "swap3")
comment(0x7956, "If a checksum byte is non-zero, jump to swap4 to reset the machine")
comment(0x7959, "Loop back to check the next checksum byte")
comment(0x795b, "All checksum bytes are zero, so jump to swap4 to keep going")
label(0x795d, "swap4")
comment(0x795d, "Reset the machine")

################################################################################
# MOVE CODE
################################################################################

entry(0x7960, "MoveCode")
label(0x7964, "move1")

comment(0x7960, "Move block (blockStartHi blockStartLo) - (blockEndHi blockEndLo)-1 to (blockToHi blockToLo)")
comment(0x7960, "  * Move &1500-&15DA to &7000-&70DA")
comment(0x7960, "  * Move &1300-&14FF to &0B00-&0CFF")
comment(0x7960, "  * Move &5A80-&645B to &0D00-&16DB")
comment(0x7960, "  * Move &64D0-&6BFF to &5FD0-&63FF")
comment(0x7960, "  * Zero &5A80-&5E3F")

label(0x7978, "move2")
label(0x7982, "move3")
label(0x7988, "move4")
label(0x79aa, "move5")
entry(0x79ad, "ldaZero")

comment(0x799b, "We get here when X = 0")
comment(0x799b, "Modify the instruction at move2 to LDA #0, so the last block move actually zeroes the block")
comment(0x79a7, "Loop back to move1 to zero the rest of the block ")

label(0x79BE, "blockEndHi")
byte(0x79BE, 5)
label(0x79B9, "blockEndLo")
byte(0x79B9, 5)
label(0x79B4, "blockStartHi")
byte(0x79B4, 5)
label(0x79AF, "blockStartLo")
byte(0x79AF, 5)
label(0x79C8, "blockToHi")
byte(0x79C8, 5)
label(0x79C3, "blockToLo")
byte(0x79C3, 5)
blank(0x12cd)

################################################################################
# OTHER
################################################################################

label(0x0b00, "soundEnvelopes")
byte(0x0b00, 0x4a, cols=8)

byte(0xcf2, 15, cols=8)

byte(0x3010, 0x306b - 0x3010)
byte(0x3076, 0x30fc - 0x3076)
byte(0x3100, 0x31d0 - 0x3100)
byte(0x32fc, 0x337c - 0x32fc)
byte(0x3406, 0x3450 - 0x3406)
byte(0x3458, 0x3483 - 0x3458)
byte(0x350f, 0x3550 - 0x350f)
byte(0x3550, 0x3583 - 0x3550)
byte(0x3592, 0x35d0 - 0x3592)
byte(0x35d0, 0x3600 - 0x35d0)
byte(0x3650, 0x3681 - 0x3650)
byte(0x3750, 0x3779 - 0x3750)
byte(0x391b, 0x397c - 0x391b)
byte(0x397c, 0x3980 - 0x397c)
byte(0x3980, 0x39d0 - 0x3980)
byte(0x3a9b, 0x3ad0 - 0x3a9b)
byte(0x3b06, 0x3b50 - 0x3b06)
byte(0x3b50, 0x3b86 - 0x3b50)
byte(0x3b8e, 0x3bd0 - 0x3b8e)
byte(0x3c24, 0x3c50 - 0x3c24)
byte(0x3ca6, 0x3cd0 - 0x3ca6)
byte(0x3cd0, 0x3cdd - 0x3cd0)
byte(0x3cde, 0x3ceb - 0x3cde)
byte(0x3d17, 0x3d50 - 0x3d17)
byte(0x3d9e, 0x3dd0 - 0x3d9e)
byte(0x3e50, 0x3e60 - 0x3e50)
byte(0x3e8f, 0x3ed0 - 0x3e8f)
byte(0x3ed0, 0x3ed8 - 0x3ed0)
byte(0x3ed8, 0x3ee0 - 0x3ed8)
byte(0x3efa, 0x3f4f - 0x3efa)
byte(0x3f6b, 0x3f80 - 0x3f6b)
byte(0x3f86, 0x3fe0 - 0x3f86)
byte(0x3fe8, 0x4050 - 0x3fe8)
byte(0x4080, 0x40d0 - 0x4080)
byte(0x40d0, 0x40e2 - 0x40d0)
byte(0x40f9, 0x4150 - 0x40f9)
byte(0x4180, 0x41d0 - 0x4180)
byte(0x41fb, 0x4250 - 0x41fb)
byte(0x4294, 0x42d0 - 0x4294)
byte(0x4400, 0x4450 - 0x4400)
byte(0x4e59, 0x4f0f - 0x4e59)
byte(0x4f0f, 0x4f1d - 0x4f0f)
byte(0x52a4, 0x5300 - 0x52a4)
byte(0x5300, 0x5949 - 0x5300)
byte(0x5fff, 0x6100 - 0x5fff)
byte(0x6100, 0x6180 - 0x6100)
byte(0x6c00, 0x70da - 0x6c00)
byte(0x8000, 0x80ff - 0x8000)


################################################################################
# MOVES
################################################################################

annotate(0x8101, "")
annotate(0x8101, "                              \ Game addr to file addr")
annotate(0x8101, "COPYBLOCK &5FD0, &6700, &64D0 \ 5fd0-66ff to 64d0-6bff")
annotate(0x8101, "COPYBLOCK &0D00, &16DC, &5A80 \ 0d00-16db to 5a80-645b")
annotate(0x8101, "COPYBLOCK &7000, &70DB, &1500 \ 7000-70da to 1500-15da")
annotate(0x8101, "COPYBLOCK &0B00, &0D00, &1300 \ 0b00-0cff to 1300-14ff")
annotate(0x8101, "COPYBLOCK &7900, &7A00, &1200 \ 7900-79ff to 1200-12ff")
annotate(0x8101, "")
annotate(0x8101, "COPYBLOCK &8000, &8101, &15DB \ Restore noise in 15db-16db")
annotate(0x8101, "")
annotate(0x8101, "CLEAR &645C, &64D0            \ Zeroes in 645c-64cf")
annotate(0x8101, "")

go()
